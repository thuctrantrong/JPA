package vn.iostar.controller;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.List;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.Part;
import vn.iostar.entity.video;
import vn.iostar.entity.Category;
import vn.iostar.entity.Video;
import vn.iostar.service.IVideoService;
import vn.iostar.service.impl.VideoServiceImpl;
import vn.iostar.util.constants;

@MultipartConfig()


@WebServlet(urlPatterns = { "/admin/videos","/admin/video/insert" ,"/admin/video/update"})
public class AdminControllerVideo extends HttpServlet   {

	/**
	 * 
	 */
	public IVideoService vdService = new VideoServiceImpl();

	private static final long serialVersionUID = 1L;
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String url = req.getRequestURI();
		if (url.contains("/admin/categories")) {

			 List<Video> list = vdService.findAll();

			 req.setAttribute("listvd", list);

			 req.getRequestDispatcher("/views/admin/video-list.jsp").forward(req, resp);

			 } else if (url.contains("/admin/video/insert")) {

			 req.getRequestDispatcher("/views/admin/video-add.jsp").forward(req, resp);
			 }
	}
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String url = req.getRequestURI();

		if (url.contains("/admin/category/update")) {

			 // lấy dữ liệu từ form

			 int categoryid = Integer.parseInt(req.getParameter("categoryid"));

			 String categoryname = req.getParameter("categoryname");

			 boolean status = Boolean.parseBoolean(req.getParameter("status"));

			 String images = req.getParameter("images");

			 // đưa dữ liệu vào model

			 Category category = null;
			try {
				category = cateService.findById(categoryid);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			 String fileold = category.getImages();

			 category.setCategoryname(categoryname);

			 category.setStatus(status);

			 String fname = "";

			 String uploadPath = constants.DIR; // upload vào thư mục bất kỳ

			 File uploadDir = new File(uploadPath);

			 if (!uploadDir.exists())

			 uploadDir.mkdir();

			 try {

			 Part part = req.getPart("images1");

			 if (part.getSize() > 0) {

			 // xóa file cũ trên thư mục

			 if (!category.getImages().substring(0, 5).equals("https") ) {

			 deleteFile(uploadPath+ "\\" + fileold);
			 
			 }

			 String filename = Paths.get(part.getSubmittedFileName()).getFileName().toString();

			 int index = filename.lastIndexOf(".");

			 String ext = filename.substring(index + 1);
			 
			 fname = System.currentTimeMillis() + "." + ext;

			 part.write(uploadPath + "/" + fname);

			 category.setImages(fname);

			 } else if (images != null) {

			 category.setImages(images);

			 } else {

			 category.setImages(fileold);

			 }

			 } catch (FileNotFoundException fne) {

			 fne.printStackTrace();

			 }

			 try {
				cateService.update(category);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

	}
}
